// –§–∞–π–ª: src/pages/Dashboard.jsx
import { useEffect, useState } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { fetchVets } from '../redux/vetSlice'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º thunk –¥–ª—è –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–æ–≤
import { fetchProducts } from '../redux/productSlice'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º thunk –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
import { fetchAnimals } from '../redux/animalSlice'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º thunk –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö

export default function Dashboard() {
  const dispatch = useDispatch();
  const { items: vets, loading: vetsLoading, error: vetsError } = useSelector((state) => state.vets);
  const { items: products, loading: productsLoading, error: productsError } = useSelector((state) => state.products); // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –∏–∑ Redux
  const { items: animals, loading: animalsLoading, error: animalsError } = useSelector((state) => state.animals); // –ü–æ–ª—É—á–∞–µ–º –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏–∑ Redux

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ Redux
    dispatch(fetchVets());
    dispatch(fetchProducts()); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã —á–µ—Ä–µ–∑ Redux
    dispatch(fetchAnimals()); // –ó–∞–≥—Ä—É–∂–∞–µ–º –∂–∏–≤–æ—Ç–Ω—ã—Ö —á–µ—Ä–µ–∑ Redux
  }, [dispatch]); // –î–æ–±–∞–≤–ª—è–µ–º dispatch –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ useEffect

  return (
    <div className="p-8 bg-gray-50 min-h-screen">
      
      <h1 className="text-3xl font-bold text-primary mb-6 text-center">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∑–æ–æ-–º–∞–≥–∞–∑–∏–Ω!</h1>
      {/* üêæ –ñ–∏–≤–æ—Ç–Ω—ã–µ */}
      <section className="mb-12">
        <h2 className="text-2xl font-semibold text-primary mb-4">–ù–∞—à–∏ –∂–∏–≤–æ—Ç–Ω—ã–µ</h2>
        {animalsLoading && <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö...</p>}
        {animalsError && <p className="text-red-500">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö: {animalsError}</p>}
        {!animalsLoading && !animalsError && (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {animals.slice(0, 4).map(animal => ( // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã—Ö 4 –∂–∏–≤–æ—Ç–Ω—ã—Ö
              <div key={animal.id} className="bg-white rounded-xl p-5 shadow-lg border-2 border-gray-200 hover:shadow-2xl transition-all">
                 {animal.image && <img src={animal.image} alt={animal.name} className="w-full h-32 object-cover rounded mb-2" />}
                <h3 className="text-lg font-semibold text-gray-800">{animal.name}</h3>
                <p className="text-gray-600">{animal.type}</p>
              </div>
            ))}
          </div>
        )}
      </section>

      {/* üë©‚Äç‚öïÔ∏è –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä—ã */}
      <section className="mb-12">
        <h2 className="text-2xl font-semibold text-primary mb-4">–ù–∞—à–∏ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—ã</h2>
        {vetsLoading && <p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–æ–≤...</p>}
        {vetsError && <p className="text-red-500">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–æ–≤: {vetsError}</p>}
        {!vetsLoading && !vetsError && (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {vets.slice(0, 4).map(vet => ( // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã—Ö 4 –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–æ–≤
              <div key={vet.id} className="bg-white rounded-xl p-5 shadow-lg border-2 border-gray-200 hover:shadow-2xl transition-all">
                <h3 className="text-lg font-semibold text-gray-800">{vet.name}</h3>
                <p className="text-gray-600">–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {vet.specialty}</p>
              </div>
            ))}
          </div>
        )}
      </section>

      {/* üõí –ü—Ä–æ–¥—É–∫—Ç—ã */}
      <section>
        <h2 className="text-2xl font-semibold text-primary mb-4">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã</h2>
        {productsLoading && <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...</p>}
        {productsError && <p className="text-red-500">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {productsError}</p>}
        {!productsLoading && !productsError && (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {products.slice(0, 4).map(product => ( // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 4 –ø—Ä–æ–¥—É–∫—Ç–∞
              <div key={product.id} className="bg-white rounded-xl p-5 shadow-lg border-2 border-gray-200 hover:shadow-2xl transition-all">
                <h3 className="text-lg font-semibold text-gray-800">{product.name}</h3>
                <p className="text-gray-600">–¶–µ–Ω–∞: {product.price}—Ç–≥</p>
                {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å –≤ –¥–∞–Ω–Ω—ã—Ö */}
                {/* {product.image && <img src={product.image} alt={product.name} className="w-full h-32 object-cover rounded mt-2" />} */}
              </div>
            ))}
          </div>
        )}
      </section>
    </div>
  );
}
